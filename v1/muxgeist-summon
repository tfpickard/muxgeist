#!/bin/bash

# Simple Muxgeist summon - calls Python directly
set -e

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
MUXGEIST_PANE_TITLE="muxgeist"
MUXGEIST_SIZE="40"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Check if we're in tmux
if [ -z "$TMUX" ]; then
    echo -e "${RED}❌ Must be run from within tmux${NC}"
    exit 1
fi

# Get current session and window
CURRENT_SESSION=$(tmux display-message -p '#{session_name}')
CURRENT_WINDOW=$(tmux display-message -p '#{window_index}')

# Find existing Muxgeist pane
find_muxgeist_pane() {
    tmux list-panes -t "$CURRENT_SESSION:$CURRENT_WINDOW" -F '#{pane_index} #{pane_title}' |
        grep "$MUXGEIST_PANE_TITLE" |
        cut -d' ' -f1
}

# Check if Muxgeist pane exists and is visible
muxgeist_exists() {
    [ -n "$(find_muxgeist_pane)" ]
}

muxgeist_visible() {
    local pane_id=$(find_muxgeist_pane)
    if [ -n "$pane_id" ]; then
        local width=$(tmux display-message -t "$pane_id" -p '#{pane_width}')
        [ "$width" -gt 5 ]
    else
        return 1
    fi
}

# Create Muxgeist pane
create_muxgeist_pane() {
    echo -e "${YELLOW}🌟 Summoning Muxgeist...${NC}"

    # Create wrapper script that sets pane title and runs Python directly
    WRAPPER=$(mktemp)
    cat >"$WRAPPER" <<WRAPPER_EOF
#!/bin/bash
printf '\033]2;$MUXGEIST_PANE_TITLE\033\\'
cd "$SCRIPT_DIR"
exec python3 "./muxgeist-interactive.py" | tee /tmp/mg-interactive.log
WRAPPER_EOF
    chmod +x "$WRAPPER"

    # Create the pane
    if tmux split-window -h -p "$MUXGEIST_SIZE" "$WRAPPER"; then
        sleep 0.5
        tmux last-pane
        echo -e "${GREEN}✅ Muxgeist summoned${NC}"

        # Clean up wrapper after delay
        (
            sleep 10
            rm -f "$WRAPPER"
        ) &
    else
        echo -e "${RED}❌ Failed to create tmux pane${NC}"
        rm -f "$WRAPPER"
        exit 1
    fi
}

# Show hidden pane
show_muxgeist_pane() {
    local pane_id=$(find_muxgeist_pane)
    tmux resize-pane -t "$pane_id" -x "${MUXGEIST_SIZE}%"
    tmux refresh-client
    echo -e "${GREEN}✅ Muxgeist shown${NC}"
}

# Hide pane
hide_muxgeist_pane() {
    local pane_id=$(find_muxgeist_pane)
    tmux resize-pane -t "$pane_id" -x 1
    tmux select-pane -t 0
    echo -e "${YELLOW}👋 Muxgeist hidden${NC}"
}

# Main logic
if muxgeist_exists; then
    if muxgeist_visible; then
        hide_muxgeist_pane
    else
        show_muxgeist_pane
    fi
else
    create_muxgeist_pane
fi
